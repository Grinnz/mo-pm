package Mo;require strict;require warnings;$Mo::VERSION='0.20';
sub import{strict->import;warnings->import;my$p=caller;@{$p.'::ISA'}=$_[0];*{$p.'::extends'}=sub{@{(caller).'::ISA'}=@_;eval"require($_)"for@_};*{$p.'::has'}=sub{my($n,%a)=@_;my($d,$b)=@a{qw(default builder)};*{(caller)."::$n"}=sub{$#_?($_[0]{$n}=$_[1]):(exists$_[0]{$n})?$_[0]{$n}:($_[0]{$n}=($d//($b?sub{$_[0]->$b}:sub {}))->($_[0]))}}}my$i;$i=sub{my($a,$c)=@_;for (@{$c."::ISA"}){'Mo'eq$_&&next;unshift@$a,$_;$i->($a,$_)}@$a};sub new{my$c=shift;my$s=bless{@_},$c;do{defined&{$_."::BUILD"}&&&{$_."::BUILD"}($s)}for($i->([$c],$c));$s}
